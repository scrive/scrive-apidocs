diff --git a/SAML2/XML/Schema/Datatypes.hs b/SAML2/XML/Schema/Datatypes.hs
index 366b327..ab77dcf 100644
--- a/SAML2/XML/Schema/Datatypes.hs
+++ b/SAML2/XML/Schema/Datatypes.hs
@@ -8,6 +8,7 @@ module SAML2.XML.Schema.Datatypes where

 import Prelude hiding (String)

+import Control.Monad.Fail (MonadFail (..))
 import qualified Data.ByteString.Char8 as BS
 import qualified Data.ByteString.Base64 as B64
 import Data.Char (isDigit)
@@ -28,6 +29,9 @@ import qualified Text.XML.HXT.Arrow.Pickle.Xml.Invertible as XP
 -- |ยง3.2.1
 type String = [Char]

+instance MonadFail XP.Unpickler where
+  fail = error
+
 xpString :: XP.PU String
 xpString = XP.xpTextDT (XPS.scDTxsd XSD.xsd_string [])

diff --git a/SAML2/XML/Signature.hs b/SAML2/XML/Signature.hs
index a797d06..feccc74 100644
--- a/SAML2/XML/Signature.hs
+++ b/SAML2/XML/Signature.hs
@@ -51,11 +51,11 @@ getID = HXT.deep . HXT.hasAttrValue "ID" . (==)

 applyCanonicalization :: CanonicalizationMethod -> Maybe String -> HXT.XmlTree -> IO BS.ByteString
 applyCanonicalization (CanonicalizationMethod (Identified a) ins []) = canonicalize a ins
-applyCanonicalization m = fail $ "applyCanonicalization: unsupported " ++ show m
+applyCanonicalization m = \_ _ -> fail $ "applyCanonicalization: unsupported " ++ show m

 applyTransformsBytes :: [Transform] -> BSL.ByteString -> IO BSL.ByteString
 applyTransformsBytes [] = return
-applyTransformsBytes (t : _) = fail ("applyTransforms: unsupported Signature " ++ show t)
+applyTransformsBytes (t : _) = \_ -> fail ("applyTransforms: unsupported Signature " ++ show t)

 applyTransformsXML :: [Transform] -> HXT.XmlTree -> IO BSL.ByteString
 applyTransformsXML (Transform (Identified (TransformCanonicalization a)) ins x : tl) =
