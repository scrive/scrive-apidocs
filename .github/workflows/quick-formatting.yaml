# DO NOT EDIT MANUALLY. Workflow generated from workflow/scripts/generate-workflow.sh.
jobs:
  detect-unused:
    runs-on:
      - ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - name: Setup Nix
        run: |
          ./ci/workflow/scripts/setup-nix.sh
      - name: Setup Cachix
        run: |
          if ! type cachix
          then
            nix-env -iA cachix -f https://cachix.org/api/v1/install
          fi
          
          cachix authtoken ${{ secrets.CACHIX_AUTH_TOKEN }}
          cachix use scrive
      - env:
          SSH_KEY_PDFTOOLS: "${{ secrets.SSH_KEY_PDFTOOLS }}"
        name: Setup SSH
        run: "./ci/workflow/scripts/setup-ssh.sh"
      - name: Load Nix Shell
        run: |
          nix-shell -j4 -A ghc88.detect-unused-shell release.nix --run true
      - name: Detect Old Templates
        run: |
          nix-shell -A ghc88.detect-unused-shell release.nix \
            --run "detect_old_templates"
      - name: Detect Old Localizations
        run: |
          nix-shell -A ghc88.detect-unused-shell release.nix \
            --run "detect_old_localizations"
  formatting:
    runs-on:
      - ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - name: Setup Nix
        run: |
          ./ci/workflow/scripts/setup-nix.sh
      - name: Setup Cachix
        run: |
          if ! type cachix
          then
            nix-env -iA cachix -f https://cachix.org/api/v1/install
          fi
          
          cachix authtoken ${{ secrets.CACHIX_AUTH_TOKEN }}
          cachix use scrive
      - env:
          SSH_KEY_PDFTOOLS: "${{ secrets.SSH_KEY_PDFTOOLS }}"
        name: Setup SSH
        run: "./ci/workflow/scripts/setup-ssh.sh"
      - name: Load Nix Shell
        run: |
          nix-shell -j4 -A ghc88.lint-shell release.nix --run true
      - env:
          quick: "-quick"
        name: Test Formatting
        run: |
          nix-shell -A ghc88.lint-shell release.nix \
            --run "./ci/workflow/scripts/test-formatting.sh"
      - if: "${{ failure() }}"
        name: Upload Formatting Patch
        uses: "actions/upload-artifact@v2"
        with:
          name: formatting.patch
          path: "_build/formatting.patch"
  hlint:
    runs-on:
      - ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - name: Setup Nix
        run: |
          ./ci/workflow/scripts/setup-nix.sh
      - name: Setup Cachix
        run: |
          if ! type cachix
          then
            nix-env -iA cachix -f https://cachix.org/api/v1/install
          fi
          
          cachix authtoken ${{ secrets.CACHIX_AUTH_TOKEN }}
          cachix use scrive
      - env:
          SSH_KEY_PDFTOOLS: "${{ secrets.SSH_KEY_PDFTOOLS }}"
        name: Setup SSH
        run: "./ci/workflow/scripts/setup-ssh.sh"
      - name: Load Nix Shell
        run: |
          nix-shell -j4 -A ghc88.lint-shell release.nix --run true
      - env:
          quick: "-quick"
        name: Test HLint
        run: |
          nix-shell -A ghc88.lint-shell release.nix \
            --run "./ci/workflow/scripts/test-hlint.sh"
      - if: "${{ failure() }}"
        name: Upload HLint Patch
        uses: "actions/upload-artifact@v2"
        with:
          name: hlint.patch
          path: "_build/hlint.patch"
name: Quick Formatting Tests
on:
  pull_request:
    paths:
      - "**.hs"
  push:
    branches:
      - nix
