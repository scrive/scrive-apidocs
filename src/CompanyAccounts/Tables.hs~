module CompanyAccounts.Tables (
    tableCompanyInvites
  ) where

import Database.HDBC

import DB.Classes
import DB.Model


tableCompanyInvites :: Table
tableCompanyInvites = Table {
    tblName = "companyinvites"
  , tblVersion = 1
  , tblCreateOrValidate = \desc -> wrapDB $ \conn -> do
    case desc of
      [ ("email", SqlColDesc {colType = SqlVarCharT, colNullable = Just False})
       , ("first_name", SqlColDesc {colType = SqlVarCharT, colNullable = Just False})
       , ("last_name", SqlColDesc {colType = SqlVarCharT, colNullable = Just False})
       , ("company_id", SqlColDesc {colType = SqlBigIntT, colNullable = Just False})
       ] -> return TVRvalid
      [] -> do
        runRaw conn $ "CREATE TABLE companyinvites ("
          ++ "  email TEXT NOT NULL"
          ++ ", first_name TEXT NOT NULL"
          ++ ", last_name TEXT NOT NULL"
          ++ ", company_id BIGINT NOT NULL"
          ++ ", CONSTRAINT pk_companyinvites PRIMARY KEY (email, company_id)"
          ++ ")"
        return TVRcreated
      _ -> return TVRinvalid
  , tblPutProperties = wrapDB $ \conn -> do
    runRaw conn "CREATE INDEX idx_users_company_id ON companyinvites(company_id)"
    runRaw conn "CREATE INDEX idx_users_email ON companyinvites(email)"
    runRaw conn $ "ALTER TABLE companyinvites"
      ++ " ADD CONSTRAINT fk_companyinvites_companies FOREIGN KEY(company_id)"
      ++ " REFERENCES companies(id) ON DELETE RESTRICT ON UPDATE RESTRICT"
      ++ " DEFERRABLE INITIALLY IMMEDIATE"
  }
